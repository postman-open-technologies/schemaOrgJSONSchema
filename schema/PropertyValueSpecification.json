{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://schema.org/PropertyValueSpecification.json",
  "$comment": "Autogenerated with schema-org-gen",
  "title": "Property Value Specification",
  "media": {
    "type": "application/json;profile=https://schema.org/PropertyValueSpecification"
  },
  "allOf": [
    {
      "$ref": "Intangible.json"
    }
  ],
  "type": "object",
  "properties": {
    "defaultValue": {
      "$ref": "#/$defs/defaultValue"
    },
    "maxValue": {
      "$ref": "#/$defs/maxValue"
    },
    "minValue": {
      "$ref": "#/$defs/minValue"
    },
    "multipleValues": {
      "oneOf": [
        {
          "$ref": "#/$defs/multipleValues"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/multipleValues"
          }
        }
      ]
    },
    "readonlyValue": {
      "oneOf": [
        {
          "$ref": "#/$defs/readonlyValue"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/readonlyValue"
          }
        }
      ]
    },
    "stepValue": {
      "$ref": "#/$defs/stepValue"
    },
    "valueMaxLength": {
      "oneOf": [
        {
          "$ref": "#/$defs/valueMaxLength"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/valueMaxLength"
          }
        }
      ]
    },
    "valueMinLength": {
      "oneOf": [
        {
          "$ref": "#/$defs/valueMinLength"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/valueMinLength"
          }
        }
      ]
    },
    "valueName": {
      "oneOf": [
        {
          "$ref": "#/$defs/valueName"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/valueName"
          }
        }
      ]
    },
    "valuePattern": {
      "oneOf": [
        {
          "$ref": "#/$defs/valuePattern"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/valuePattern"
          }
        }
      ]
    },
    "valueRequired": {
      "oneOf": [
        {
          "$ref": "#/$defs/valueRequired"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/valueRequired"
          }
        }
      ]
    }
  },
  "$defs": {
    "arrayOfPropertyValueSpecifications": {
      "type": "array",
      "items": {
        "$ref": "#"
      }
    },
    "possibleRef": {
      "oneOf": [
        {
          "$ref": "#"
        },
        {
          "type": "string",
          "format": "uri",
          "links": [
            {
              "rel": "full",
              "href": "{+$}"
            }
          ]
        }
      ]
    },
    "possibleRefArray": {
      "oneOf": [
        {
          "type": "string",
          "format": "uri",
          "links": [
            {
              "rel": "full",
              "href": "{+$}"
            }
          ]
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/possibleRef"
          }
        }
      ]
    },
    "defaultValue": {
      "title": "Default Value",
      "description": "The default value of the input.  For properties that expect a literal, the default is a literal value, for properties that expect an object, it's an ID reference to one of the current values.",
      "anyOf": [
        {
          "type": "string"
        },
        {
          "$ref": "Thing.json#/$defs/possibleRef"
        }
      ]
    },
    "maxValue": {
      "title": "Max Value",
      "description": "The upper value of some characteristic or property.",
      "type": "number"
    },
    "minValue": {
      "title": "Min Value",
      "description": "The lower value of some characteristic or property.",
      "type": "number"
    },
    "multipleValues": {
      "title": "Multiple Values",
      "description": "Whether multiple values are allowed for the property.  Default is false.",
      "type": "boolean"
    },
    "readonlyValue": {
      "title": "Readonly Value",
      "description": "Whether or not a property is mutable.  Default is false. Specifying this for a property that also has a value makes it act similar to a \"hidden\" input in an HTML form.",
      "type": "boolean"
    },
    "stepValue": {
      "title": "Step Value",
      "description": "The stepValue attribute indicates the granularity that is expected (and required) of the value in a PropertyValueSpecification.",
      "type": "number"
    },
    "valueMaxLength": {
      "title": "Value Max Length",
      "description": "Specifies the allowed range for number of characters in a literal value.",
      "type": "number"
    },
    "valueMinLength": {
      "title": "Value Min Length",
      "description": "Specifies the minimum allowed range for number of characters in a literal value.",
      "type": "number"
    },
    "valueName": {
      "title": "Value Name",
      "description": "Indicates the name of the PropertyValueSpecification to be used in URL templates and form encoding in a manner analogous to HTML's input@name.",
      "type": "string"
    },
    "valuePattern": {
      "title": "Value Pattern",
      "description": "Specifies a regular expression for testing literal values according to the HTML spec.",
      "type": "string"
    },
    "valueRequired": {
      "title": "Value Required",
      "description": "Whether the property must be filled in to complete the action.  Default is false.",
      "type": "boolean"
    }
  }
}