{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://schema.org/Thing.json",
  "$comment": "Autogenerated with schema-org-gen",
  "title": "Thing",
  "media": {
    "type": "application/json;profile=https://schema.org/Thing"
  },
  "type": "object",
  "properties": {
    "additionalType": {
      "type": "array",
      "items": {
        "type": "string",
        "format": "uri",
        "links": [
          {
            "rel": "https://schema.org/additionalType",
            "href": "{+$}",
            "linkSource": 2
          }
        ]
      }
    },
    "alternateName": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/alternateName"
      }
    },
    "description": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/description"
      }
    },
    "disambiguatingDescription": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/disambiguatingDescription"
      }
    },
    "identifier": {
      "$ref": "#/$defs/identifier"
    },
    "image": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/image"
      }
    },
    "mainEntityOfPage": {
      "oneOf": [
        {
          "$ref": "#/$defs/mainEntityOfPage"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/mainEntityOfPage"
          }
        }
      ]
    },
    "name": {
      "$ref": "#/$defs/name"
    },
    "potentialAction": {
      "oneOf": [
        {
          "$ref": "Action.json#/$defs/possibleRef"
        },
        {
          "type": "array",
          "items": {
            "$ref": "Action.json#/$defs/possibleRef"
          }
        }
      ]
    },
    "sameAs": {
      "type": "array",
      "items": {
        "type": "string",
        "format": "uri",
        "links": [
          {
            "rel": "https://schema.org/sameAs",
            "href": "{+$}",
            "linkSource": 2
          }
        ]
      }
    },
    "subjectOf": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/subjectOf"
      }
    },
    "url": {
      "type": "string",
      "format": "uri"
    }
  },
  "links": [
    {
      "rel": "self",
      "href": "{+url}"
    }
  ],
  "$defs": {
    "arrayOfThings": {
      "type": "array",
      "items": {
        "$ref": "#"
      }
    },
    "possibleRef": {
      "oneOf": [
        {
          "$ref": "#"
        },
        {
          "type": "string",
          "format": "uri",
          "links": [
            {
              "rel": "full",
              "href": "{+$}"
            }
          ]
        }
      ]
    },
    "possibleRefArray": {
      "oneOf": [
        {
          "type": "string",
          "format": "uri",
          "links": [
            {
              "rel": "full",
              "href": "{+$}"
            }
          ]
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/possibleRef"
          }
        }
      ]
    },
    "alternateName": {
      "title": "Alternate Name",
      "description": "An alias for the item.",
      "type": "string"
    },
    "description": {
      "title": "Description",
      "description": "A description of the item.",
      "type": "string"
    },
    "disambiguatingDescription": {
      "title": "Disambiguating Description",
      "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.",
      "type": "string"
    },
    "identifier": {
      "title": "Identifier",
      "description": "The identifier property represents any kind of identifier for any kind of Thing, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See background notes for more details.",
      "anyOf": [
        {
          "$ref": "PropertyValue.json#/$defs/possibleRef"
        },
        {
          "type": "string"
        },
        {
          "type": "string",
          "format": "uri"
        }
      ]
    },
    "image": {
      "title": "Image",
      "description": "An image of the item. This can be a URL or a fully described ImageObject.",
      "anyOf": [
        {
          "$ref": "ImageObject.json#/$defs/possibleRef"
        },
        {
          "type": "string",
          "format": "uri"
        }
      ]
    },
    "mainEntityOfPage": {
      "title": "Main Entity of Page",
      "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See background notes for details.\n                \n                \n                Inverse property: \n    \n    \n    mainEntity",
      "anyOf": [
        {
          "$ref": "CreativeWork.json#/$defs/possibleRef"
        },
        {
          "type": "string",
          "format": "uri"
        }
      ]
    },
    "name": {
      "title": "Name",
      "description": "The name of the item.",
      "type": "string"
    },
    "subjectOf": {
      "title": "Subject of",
      "description": "A CreativeWork or Event about this Thing.\n                \n                \n                Inverse property: \n    \n    \n    about",
      "anyOf": [
        {
          "$ref": "CreativeWork.json#/$defs/possibleRef"
        },
        {
          "$ref": "Event.json#/$defs/possibleRef"
        }
      ]
    }
  }
}