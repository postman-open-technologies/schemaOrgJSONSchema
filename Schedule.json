{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://schema.org/Schedule.json",
  "$comment": "Autogenerated with schema-org-gen",
  "title": "Schedule",
  "media": {
    "type": "application/json;profile=https://schema.org/Schedule"
  },
  "type": "object",
  "properties": {
    "byDay": {
      "oneOf": [
        {
          "$ref": "#/$defs/byDay"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/byDay"
          }
        }
      ]
    },
    "byMonth": {
      "oneOf": [
        {
          "$ref": "#/$defs/byMonth"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/byMonth"
          }
        }
      ]
    },
    "byMonthDay": {
      "oneOf": [
        {
          "$ref": "#/$defs/byMonthDay"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/byMonthDay"
          }
        }
      ]
    },
    "byMonthWeek": {
      "oneOf": [
        {
          "$ref": "#/$defs/byMonthWeek"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/byMonthWeek"
          }
        }
      ]
    },
    "duration": {
      "$ref": "Duration.json#/$defs/possibleRef"
    },
    "endDate": {
      "$ref": "#/$defs/endDate"
    },
    "endTime": {
      "$ref": "#/$defs/endTime"
    },
    "exceptDate": {
      "oneOf": [
        {
          "$ref": "#/$defs/exceptDate"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/exceptDate"
          }
        }
      ]
    },
    "repeatCount": {
      "oneOf": [
        {
          "$ref": "#/$defs/repeatCount"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/repeatCount"
          }
        }
      ]
    },
    "repeatFrequency": {
      "oneOf": [
        {
          "$ref": "#/$defs/repeatFrequency"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/repeatFrequency"
          }
        }
      ]
    },
    "scheduleTimezone": {
      "oneOf": [
        {
          "$ref": "#/$defs/scheduleTimezone"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/scheduleTimezone"
          }
        }
      ]
    },
    "startDate": {
      "$ref": "#/$defs/startDate"
    },
    "startTime": {
      "$ref": "#/$defs/startTime"
    }
  },
  "$defs": {
    "arrayOfSchedules": {
      "type": "array",
      "items": {
        "$ref": "#"
      }
    },
    "possibleRef": {
      "oneOf": [
        {
          "$ref": "#"
        },
        {
          "type": "string",
          "format": "uri",
          "links": [
            {
              "rel": "full",
              "href": "{+$}"
            }
          ]
        }
      ]
    },
    "possibleRefArray": {
      "oneOf": [
        {
          "type": "string",
          "format": "uri",
          "links": [
            {
              "rel": "full",
              "href": "{+$}"
            }
          ]
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/possibleRef"
          }
        }
      ]
    },
    "byDay": {
      "title": "By Day",
      "description": "Defines the day(s) of the week on which a recurring Event takes place. May be specified using either DayOfWeek, or alternatively Text conforming to iCal's syntax for byDay recurrence rules.",
      "anyOf": [
        {
          "$ref": "DayOfWeek.json#/$defs/possibleRef"
        },
        {
          "type": "string"
        }
      ]
    },
    "byMonth": {
      "title": "By Month",
      "description": "Defines the month(s) of the year on which a recurring Event takes place. Specified as an Integer between 1-12. January is 1.",
      "type": "integer"
    },
    "byMonthDay": {
      "title": "By Month Day",
      "description": "Defines the day(s) of the month on which a recurring Event takes place. Specified as an Integer between 1-31.",
      "type": "integer"
    },
    "byMonthWeek": {
      "title": "By Month Week",
      "description": "Defines the week(s) of the month on which a recurring Event takes place. Specified as an Integer between 1-5. For clarity, byMonthWeek is best used in conjunction with byDay to indicate concepts like the first and third Mondays of a month.",
      "type": "integer"
    },
    "endDate": {
      "title": "End Date",
      "description": "The end date and time of the item (in ISO 8601 date format).",
      "type": "string",
      "format": "date-time"
    },
    "endTime": {
      "title": "End Time",
      "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to December. For media, including audio and video, it's the time offset of the end of a clip within a larger file.\n\nNote that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions.",
      "anyOf": [
        {
          "type": "string",
          "format": "time"
        },
        {
          "type": "string",
          "format": "date-time"
        }
      ]
    },
    "exceptDate": {
      "title": "Except Date",
      "description": "Defines a Date or DateTime during which a scheduled Event will not take place. The property allows exceptions to\n      a Schedule to be specified. If an exception is specified as a DateTime then only the event that would have started at that specific date and time\n      should be excluded from the schedule. If an exception is specified as a Date then any event that is scheduled for that 24 hour period should be\n      excluded from the schedule. This allows a whole day to be excluded from the schedule without having to itemise every scheduled event.",
      "anyOf": [
        {
          "type": "string",
          "format": "date"
        },
        {
          "type": "string",
          "format": "date-time"
        }
      ]
    },
    "repeatCount": {
      "title": "Repeat Count",
      "description": "Defines the number of times a recurring Event will take place",
      "type": "integer"
    },
    "repeatFrequency": {
      "title": "Repeat Frequency",
      "description": "Defines the frequency at which Events will occur according to a schedule Schedule. The intervals between\n      events should be defined as a Duration of time.",
      "anyOf": [
        {
          "$ref": "Duration.json#/$defs/possibleRef"
        },
        {
          "type": "string"
        }
      ]
    },
    "scheduleTimezone": {
      "title": "Schedule Timezone",
      "description": "Indicates the timezone for which the time(s) indicated in the Schedule are given. The value provided should be among those listed in the IANA Time Zone Database.",
      "type": "string"
    },
    "startDate": {
      "title": "Start Date",
      "description": "The start date and time of the item (in ISO 8601 date format).",
      "type": "string",
      "format": "date-time"
    },
    "startTime": {
      "title": "Start Time",
      "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to December. For media, including audio and video, it's the time offset of the start of a clip within a larger file.\n\nNote that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions.",
      "anyOf": [
        {
          "type": "string",
          "format": "time"
        },
        {
          "type": "string",
          "format": "date-time"
        }
      ]
    }
  }
}